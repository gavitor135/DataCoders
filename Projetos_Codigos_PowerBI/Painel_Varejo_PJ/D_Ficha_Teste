-- 1) Filtro inicial: só traz as pastas do varejo
WITH CTE_FICHAVAREJO AS (
    SELECT
        fp.PASTA,
        fp.PRODUTO,
        fp.TIPO_ACAO,
        fp.ESTADO,
        fp.CARTEIRA,
        fp.PROCESSO,
        fp.BJ,
        fp.STATUS_PASTA,
        fp.DATA_DO_AJUIZAMENTO,
        fp.DATA_ENCERRAMENTO,
        fp.DATA_ENTRADA_PROC,
        fp.DATA_TERCEIRIZACAO,
        fp.DATA_CADASTRO_PASTA,
        fp.RESPONSAVEL_1,
        fp.CASO_NOVO,
        fp.CASO_ANTIGO,
        fp.AGRUPADORES,
        fp.ASSUNTO,
        fp.VALOR_CAUSA
    FROM JURIDICO.FICHAPROCESSUAL fp WITH(NOLOCK)
    WHERE fp.PRODUTO IN (
        'ITAÚ - COBRANÇA VAREJO INSTRUMENTO',
        'ITAÚ - COBRANÇA VAREJO INTERMEDIARIA',
        'ITAÚ - COBRANÇA VAREJO'
    )
),

-- 2) Consolidar todas as penhoras em uma única varredura
CTE_PENHORAS AS (
    SELECT
        PASTA,
        SUM(CASE WHEN Fonte = 'IMOVEIS' THEN Valor ELSE 0 END) AS Valor_Imoveis,
        SUM(CASE WHEN Fonte = 'MLE'     THEN Valor ELSE 0 END) AS Valor_MLE,
        SUM(CASE WHEN Fonte = 'MLJ'     THEN Valor ELSE 0 END) AS Valor_MLJ
    FROM (
        SELECT PASTA, Valor_de_Arrematacao_Penhora_Imoveis AS Valor, 'IMOVEIS' AS Fonte
        FROM JURIDICO.PENHORA_IMOVEIS WITH(NOLOCK)
        UNION ALL
        SELECT PASTA, Valor_Nominal_do_Deposito_Penhora_MLE, 'MLE'
        FROM JURIDICO.PENHORA_MLE WITH(NOLOCK)
        UNION ALL
        SELECT PASTA, Valor_Levantado_Penhora_MLJ, 'MLJ'
        FROM JURIDICO.PENHORA_MLJ WITH(NOLOCK)
    ) x
    GROUP BY PASTA
),

-- 3) Varre ANDAMENTOS uma única vez, criando flags para cada condição
CTE_ANDAMENTOS AS (
    SELECT
        a.PASTA,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'COM SINAL VITAL' THEN 1 ELSE 0 END)                             AS Has_Com_Sinal_Vital,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'SEM SINAL VITAL' THEN 1 ELSE 0 END)                             AS Has_Sem_Sinal_Vital,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 070 - TESE PENHORA FATURAMENTO - PETICIONADO' THEN 1 ELSE 0 END) 
                                                                                                         AS Has_Tese_Penhora_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 071.1 - TESE PENHORA FATURAMENTO - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Penhora_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 076 - TESE DESVIO DE RECEBÍVEIS - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Desvio_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 077.1 - TESE DESVIO DE RECEBÍVEIS - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Desvio_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 079 - TESE GRUPO ECONÔMICO - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Grupo_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 080.1 - TESE GRUPO ECONÔMICO - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Grupo_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 081 - TESE SUCESSÃO EMPRESARIAL - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Sucessao_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 082.1 - TESE SUCESSÃO EMPRESARIAL - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Sucessao_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 083 - TESE FRAUDE À EXECUÇÃO - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Fraude_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 084.1 - TESE FRAUDE À EXECUÇÃO - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_Fraude_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 085 - TESE DESCONSIDERAÇÃO INVERSA DA PERSONALIDADE JURÍDICA - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_DescInversa_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 086.1 - TESE DESCONSIDERAÇÃO INVERSA DA PERSONALIDADE JURÍDICA - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_DescInversa_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 86.2 – TESE - INCIDENTE DESCONSIDERAÇÃO DA PERSONALIDADE JURÍDICA - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_IncidenteDP_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 86.4 – TESE - INCIDENTE DESCONSIDERAÇÃO DA PERSONALIDADE JURÍDICA - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_IncidenteDP_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 091 - TESE APREENSÃO DE PASSAPORTE - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_ApreensaoPassaporte_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 092.1 - TESE APREENSÃO DE PASSAPORTE - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_ApreensaoPassaporte_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 093- TESE BLOQUEIO DE CNH - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_BloqCNH_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 094.1 - TESE BLOQUEIO DE CNH - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_BloqCNH_Indeferida,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 095- TESE BLOQUEIO PENHORA DE MARCA E PATENTE - PETICIONADO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_BloqPenhMarca_Peticionada,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 096.1 - TESE BLOQUEIO PENHORA DE MARCA E PATENTE - INDEFERIDO' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Tese_BloqPenhMarca_Indeferida,
 
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 046.2 - PENHORA VALORES - NEGATIVA' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Penha_Valores_Negativa,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'IMP 101 - PESQUISA ARISP NEGATIVA' THEN 1 ELSE 0 END)
                                                                                                         AS Has_Pesquisa_Arisp_Negativa,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'SISBAJUD NEGATIVO' THEN 1 ELSE 0 END)
                                                                                                                AS Has_Sisbajud_Negativo,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'RENAJUD - NEGATIVO' THEN 1 ELSE 0 END)
                                                                                                                AS Has_Renajud_Negativo,
        MAX(CASE WHEN a.TIPO_ANDAMENTO = 'PESQUISA COMPLETA DE BENS - TESE DIFERENCIADA - NEGATIVA' THEN 1 ELSE 0 END)
                                                                                                                AS Has_Pesquisa_Completa_Negativa

    FROM JURIDICO.ANDAMENTOS a WITH(NOLOCK)
    WHERE a.TIPO_ANDAMENTO IN (
        'COM SINAL VITAL','SEM SINAL VITAL',
        'IMP 070 - TESE PENHORA FATURAMENTO - PETICIONADO',
        'IMP 071.1 - TESE PENHORA FATURAMENTO - INDEFERIDO',
        'IMP 076 - TESE DESVIO DE RECEBÍVEIS - PETICIONADO',
        'IMP 077.1 - TESE DESVIO DE RECEBÍVEIS - INDEFERIDO',
        'IMP 079 - TESE GRUPO ECONÔMICO - PETICIONADO',
        'IMP 080.1 - TESE GRUPO ECONÔMICO - INDEFERIDO',
        'IMP 081 - TESE SUCESSÃO EMPRESARIAL - PETICIONADO',
        'IMP 082.1 - TESE SUCESSÃO EMPRESARIAL - INDEFERIDO',
        'IMP 083 - TESE FRAUDE À EXECUÇÃO - PETICIONADO',
        'IMP 084.1 - TESE FRAUDE À EXECUÇÃO - INDEFERIDO',
        'IMP 085 - TESE DESCONSIDERAÇÃO INVERSA DA PERSONALIDADE JURÍDICA - PETICIONADO',
        'IMP 086.1 - TESE DESCONSIDERAÇÃO INVERSA DA PERSONALIDADE JURÍDICA - INDEFERIDO',
        'IMP 86.2 – TESE - INCIDENTE DESCONSIDERAÇÃO DA PERSONALIDADE JURÍDICA - PETICIONADO',
        'IMP 86.4 – TESE - INCIDENTE DESCONSIDERAÇÃO DA PERSONALIDADE JURÍDICA - INDEFERIDO',
        'IMP 091 - TESE APREENSÃO DE PASSAPORTE - PETICIONADO',
        'IMP 092.1 - TESE APREENSÃO DE PASSAPORTE - INDEFERIDO',
        'IMP 093- TESE BLOQUEIO DE CNH - PETICIONADO',
        'IMP 094.1 - TESE BLOQUEIO DE CNH - INDEFERIDO',
        'IMP 095- TESE BLOQUEIO PENHORA DE MARCA E PATENTE - PETICIONADO',
        'IMP 096.1 - TESE BLOQUEIO PENHORA DE MARCA E PATENTE - INDEFERIDO',
        'IMP 046.2 - PENHORA VALORES - NEGATIVA',
        'IMP 101 - PESQUISA ARISP NEGATIVA',
        'SISBAJUD NEGATIVO',
        'RENAJUD - NEGATIVO',
        'PESQUISA COMPLETA DE BENS - TESE DIFERENCIADA - NEGATIVA'
    )
    GROUP BY a.PASTA
),

-- 4) Classificação final usando apenas 3 JOINs
CTE_CLASSIFICACAO AS (
    SELECT
        f.PASTA,
        p.Valor_Imoveis,
        p.Valor_MLE,
        p.Valor_MLJ,
        (ISNULL(p.Valor_Imoveis,0) + ISNULL(p.Valor_MLE,0) + ISNULL(p.Valor_MLJ,0)) AS Valor_Total_Penhora,
        a.Has_Com_Sinal_Vital,
        a.Has_Sem_Sinal_Vital,
        a.Has_Tese_Penhora_Peticionada,
        a.Has_Tese_Penhora_Indeferida,
        a.Has_Tese_Desvio_Peticionada,
        a.Has_Tese_Desvio_Indeferida,
        a.Has_Tese_Grupo_Peticionada,
        a.Has_Tese_Grupo_Indeferida,
        a.Has_Tese_Sucessao_Peticionada,
        a.Has_Tese_Sucessao_Indeferida,
        a.Has_Tese_Fraude_Peticionada,
        a.Has_Tese_Fraude_Indeferida,
        a.Has_Tese_DescInversa_Peticionada,
        a.Has_Tese_DescInversa_Indeferida,
        a.Has_Tese_IncidenteDP_Peticionada,
        a.Has_Tese_IncidenteDP_Indeferida,
        a.Has_Tese_ApreensaoPassaporte_Peticionada,
        a.Has_Tese_ApreensaoPassaporte_Indeferida,
        a.Has_Tese_BloqCNH_Peticionada,
        a.Has_Tese_BloqCNH_Indeferida,
        a.Has_Tese_BloqPenhMarca_Peticionada,
        a.Has_Tese_BloqPenhMarca_Indeferida,
        a.Has_Pesquisa_Completa_Negativa,
        a.Has_Renajud_Negativo,
        a.Has_Sisbajud_Negativo,
        a.Has_Pesquisa_Arisp_Negativa,
        a.Has_Penha_Valores_Negativa,

        CASE
            WHEN (ISNULL(p.Valor_Imoveis,0) + ISNULL(p.Valor_MLE,0) + ISNULL(p.Valor_MLJ,0)) > f.VALOR_CAUSA
                THEN 'SUPER RECUPERAVEL'
            WHEN (ISNULL(p.Valor_MLJ,0) < f.VALOR_CAUSA * 0.5
                  AND (ISNULL(p.Valor_MLE,0) + ISNULL(p.Valor_MLJ,0)) BETWEEN (f.VALOR_CAUSA * 0.1) AND (f.VALOR_CAUSA * 0.5))
                THEN 'RECUPERAVEL'
            WHEN (
                    -- qualquer tese peticionada sem indeferido correspondente
                    (a.Has_Tese_Penhora_Peticionada = 1 AND a.Has_Tese_Penhora_Indeferida = 0)
                 OR (a.Has_Tese_Desvio_Peticionada = 1   AND a.Has_Tese_Desvio_Indeferida   = 0)
                 OR (a.Has_Tese_Grupo_Peticionada = 1    AND a.Has_Tese_Grupo_Indeferida    = 0)
                 OR (a.Has_Tese_Sucessao_Peticionada = 1 AND a.Has_Tese_Sucessao_Indeferida = 0)
                 OR (a.Has_Tese_Fraude_Peticionada = 1   AND a.Has_Tese_Fraude_Indeferida   = 0)
                 OR (a.Has_Tese_DescInversa_Peticionada = 1 AND a.Has_Tese_DescInversa_Indeferida = 0)
                 OR (a.Has_Tese_IncidenteDP_Peticionada = 1 AND a.Has_Tese_IncidenteDP_Indeferida = 0)
                 OR (a.Has_Tese_ApreensaoPassaporte_Peticionada = 1 AND a.Has_Tese_ApreensaoPassaporte_Indeferida = 0)
                 OR (a.Has_Tese_BloqCNH_Peticionada = 1 AND a.Has_Tese_BloqCNH_Indeferida = 0)
                 OR (a.Has_Tese_BloqPenhMarca_Peticionada = 1 AND a.Has_Tese_BloqPenhMarca_Indeferida = 0)
                 -- ou sinal vital há mais de 2 anos
                 OR (DATEDIFF(DAY, f.DATA_DO_AJUIZAMENTO, GETDATE()) > 730 AND a.Has_Com_Sinal_Vital = 1)
                 -- ou penhora total acima de 10%
                 OR ((ISNULL(p.Valor_Imoveis,0) + ISNULL(p.Valor_MLE,0) + ISNULL(p.Valor_MLJ,0)) > (f.VALOR_CAUSA * 0.1))
                 )
                THEN 'PARCIALMENTE RECUPERÁVEL'
            WHEN
                (
                -- soma de todas as flags: NULL vira 0
                COALESCE(a.Has_Tese_Penhora_Peticionada,0)
                + COALESCE(a.Has_Tese_Desvio_Peticionada,0)
                + COALESCE(a.Has_Tese_Grupo_Peticionada,0)
                + COALESCE(a.Has_Tese_Sucessao_Peticionada,0)
                + COALESCE(a.Has_Tese_Fraude_Peticionada,0)
                + COALESCE(a.Has_Tese_DescInversa_Peticionada,0)
                + COALESCE(a.Has_Tese_IncidenteDP_Peticionada,0)
                + COALESCE(a.Has_Tese_ApreensaoPassaporte_Peticionada,0)
                + COALESCE(a.Has_Tese_BloqCNH_Peticionada,0)
                + COALESCE(a.Has_Tese_BloqPenhMarca_Peticionada,0)
                ) = 0
                OR(
                                    -- qualquer tese peticionada sem indeferido correspondente
                    (a.Has_Tese_Penhora_Peticionada = 1 AND a.Has_Tese_Penhora_Indeferida = 0)
                 OR (a.Has_Tese_Desvio_Peticionada = 1   AND a.Has_Tese_Desvio_Indeferida   = 0)
                 OR (a.Has_Tese_Grupo_Peticionada = 1    AND a.Has_Tese_Grupo_Indeferida    = 0)
                 OR (a.Has_Tese_Sucessao_Peticionada = 1 AND a.Has_Tese_Sucessao_Indeferida = 0)
                 OR (a.Has_Tese_Fraude_Peticionada = 1   AND a.Has_Tese_Fraude_Indeferida   = 0)
                 OR (a.Has_Tese_DescInversa_Peticionada = 1 AND a.Has_Tese_DescInversa_Indeferida = 0)
                 OR (a.Has_Tese_IncidenteDP_Peticionada = 1 AND a.Has_Tese_IncidenteDP_Indeferida = 0)
                 OR (a.Has_Tese_ApreensaoPassaporte_Peticionada = 1 AND a.Has_Tese_ApreensaoPassaporte_Indeferida = 0)
                 OR (a.Has_Tese_BloqCNH_Peticionada = 1 AND a.Has_Tese_BloqCNH_Indeferida = 0)
                 OR (a.Has_Tese_BloqPenhMarca_Peticionada = 1 AND a.Has_Tese_BloqPenhMarca_Indeferida = 0)
                )
                OR (a.Has_Pesquisa_Arisp_Negativa = 0 AND a.Has_Penha_Valores_Negativa = 0)

                OR (a.Has_Pesquisa_Completa_Negativa = 0 AND a.Has_Renajud_Negativo = 0 AND a.Has_Sisbajud_Negativo = 0)

                OR COALESCE(a.Has_Sem_Sinal_Vital,0) = 1

                OR (
                DATEDIFF(DAY, f.DATA_DO_AJUIZAMENTO, GETDATE()) < 730
                AND COALESCE(a.Has_Com_Sinal_Vital,0) = 1
                )
            THEN
                'IRECUPERAVEL'
            ELSE NULL
        END AS CLASSIFICACAO
    FROM CTE_FICHAVAREJO f
    LEFT JOIN CTE_PENHORAS    p ON f.PASTA = p.PASTA
    LEFT JOIN CTE_ANDAMENTOS  a ON f.PASTA = a.PASTA
)

-- 5) SELECT final: preencha com APPLYs ou JOINs para compromissos, tarefas e acordos, como no seu script original
SELECT
    f.*,
    c.CLASSIFICACAO,
    acorven.STATUS_ACORDO,
    acorven.STATUS_GERAL,
    c1.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_1,
    c2.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_2,
    c3.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_3,
    c4.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_4,
    c4.DATA_CONCLUSAO_COMPROMISSO AS DATA_CONCLUSAO_COMPROMISSO_4,
    c5.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_5,
    c5.DATA_CONCLUSAO_COMPROMISSO AS DATA_CONCLUSAO_COMPROMISSO_5,
    tp.TIPO_DE_DOCUMENTO,
    tp.DATA_EXECUCAO_TAREFA
FROM CTE_FICHAVAREJO f
LEFT JOIN CTE_CLASSIFICACAO c ON f.PASTA = c.PASTA
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'Encerramento'
) c1 ON f.PASTA = c1.PASTA AND c1.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'PESQUISA COMPLETA DE BENS - TESE DIFERENCIADA'
) c2 ON f.PASTA = c2.PASTA AND c2.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'RECOLHER CUSTAS INICIAIS DA AÇÃO'
) c3 ON f.PASTA = c3.PASTA AND c3.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'RECURSO DE APELAÇÃO'
) c4 ON f.PASTA = c4.PASTA AND c4.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'CONTRARRAZÕES DE APELAÇÃO'
) c5 ON f.PASTA = c5.PASTA AND c5.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_DE_DOCUMENTO,
        DATA_EXECUCAO_TAREFA,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_EXECUCAO_TAREFA DESC) AS RankTarefa
    FROM Juridico.Triare_Protocolo WITH (NOLOCK)
    WHERE TIPO_DE_DOCUMENTO = 'Petição de Suspensão pelo 921, III, CPC (H)'
) tp ON f.PASTA = tp.PASTA AND tp.RankTarefa = 1
LEFT JOIN Juridico.Penhora_Imoveis pimo WITH (NOLOCK)
    ON f.PASTA = pimo.PASTA
LEFT JOIN (    
    SELECT 
        contr.nkPasta,
        fp.pasta,
        acord.statusAcordo AS 'STATUS_ACORDO',
        acord.nkstatusAcordo AS 'NK_STATUS_ACORDO',
        acord.dataPrimeiroVencimento,
        ROW_NUMBER () OVER (PARTITION BY contr.NKPASTA ORDER BY acord.dataPrimeiroVencimento DESC,nkstatusAcordo DESC) as rk,
    CASE 
    WHEN acord.nkstatusAcordo IN (1,3) THEN 'MINUTA ENVIADA'
    WHEN acord.nkstatusAcordo IN (5,6) THEN 'ACORDO PAGO'
    WHEN acord.nkstatusAcordo IN (2,7,9) THEN 'CANCELADO'
    ELSE 'OUTROS' END AS 'STATUS_GERAL'
    FROM negocial.COB_clienteEvento AS evc WITH (NOLOCK)
    LEFT JOIN negocial.COB_Acordo as acord WITH (NOLOCK) ON evc.nkClienteEvento = acord.nkAcordo 
    LEFT JOIN negocial.COB_Cliente AS cli WITH (NOLOCK) ON evc.nkCliente = cli.nkCliente
    LEFT JOIN negocial.COB_Contrato AS contr WITH (NOLOCK) ON cli.nkCliente = contr.nkCliente
    INNER JOIN CTE_FICHAVAREJO as fp WITH(NOLOCK) ON contr.nkpasta = fp.PASTA
) acorven ON f.PASTA = acorven.nkPasta and acorven.rk = 1
