--- CTE FICHA PROCESSUAL VAREJO
WITH FICHAVAREJO AS (
SELECT    
    fp.PASTA,
    fp.PRODUTO,
    fp.TIPO_ACAO,
    fp.ESTADO,
    fp.CARTEIRA,
    fp.PROCESSO,
    fp.BJ,
    fp.STATUS_PASTA,
    fp.DATA_DO_AJUIZAMENTO,
    fp.DATA_ENCERRAMENTO,
    fp.DATA_ENTRADA_PROC,
    fp.DATA_TERCEIRIZACAO,
    fp.DATA_CADASTRO_PASTA,
    fp.RESPONSAVEL_1,
    fp.CASO_NOVO,
    fp.CASO_ANTIGO,
    fp.AGRUPADORES,
    fp.ASSUNTO
FROM JURIDICO.FICHAPROCESSUAL FP WITH(NOLOCK)
WHERE FP.PRODUTO IN (
    'ITAÚ - COBRANÇA VAREJO INSTRUMENTO',
    'ITAÚ - COBRANÇA VAREJO INTERMEDIARIA',
    'ITAÚ - COBRANÇA VAREJO')),

--- CTE PARA CALCULO DA CLASSIFICAÇÃO DE RECUPERAÇÃO
CTE_CLASSIFICACAO AS (
    SELECT
        FP.PASTA,
        FP.VALOR_CAUSA,

        COALESCE(PENIMO.VALOR_DE_ARREMATACAO_PENHORA_IMOVEIS, 0) AS VALOR_PENHORA_IMOVEIS,
        COALESCE(PENMLE.VALOR_NOMINAL_DO_DEPOSITO_PENHORA_MLE, 0) AS VALOR_MLE,
        COALESCE(PENMLJ.VALOR_LEVANTADO_PENHORA_MLJ, 0) AS VALOR_MLJ,

        COALESCE(PENMLE.VALOR_NOMINAL_DO_DEPOSITO_PENHORA_MLE, 0) +
        COALESCE(PENMLJ.VALOR_LEVANTADO_PENHORA_MLJ, 0) AS VALOR_TOTAL_PENHORA_VALORES,

--- 1º VERIFICAÇÃO : CASO O VALOR DA PENHORA DE IMOVEIS + VALOR DA PENHORA DE VALORES FOR MAIOR QUE O VALOR DA CAUSA
        CASE
            WHEN (COALESCE(PENIMO.VALOR_DE_ARREMATACAO_PENHORA_IMOVEIS, 0) +
                  COALESCE(PENMLE.VALOR_NOMINAL_DO_DEPOSITO_PENHORA_MLE, 0) +
                  COALESCE(PENMLJ.VALOR_LEVANTADO_PENHORA_MLJ, 0)) > FP.VALOR_CAUSA
                THEN 'SUPER RECUPERAVEL'

--- 2º VERIFICAÇÃO : PENHORA DE IMOVEL COM VALOR ATÉ 50% DO VALOR DA CAUSA + PENHORA DE VALOR ENTRE 10% E 50% DO VALOR DA CAUSA
            WHEN (COALESCE(PENMLJ.VALOR_LEVANTADO_PENHORA_MLJ, 0) < (FP.VALOR_CAUSA * 0.5) AND
                  (COALESCE(PENMLE.VALOR_NOMINAL_DO_DEPOSITO_PENHORA_MLE, 0) +
                   COALESCE(PENMLJ.VALOR_LEVANTADO_PENHORA_MLJ, 0)) BETWEEN (FP.VALOR_CAUSA * 0.1) AND (FP.VALOR_CAUSA * 0.5))
                THEN 'RECUPERAVEL'

--- 3º VERIFICAÇÃO : COM TESE PETICIONADA(E NÃO INDEFERIDA) OU COM PENHORA DE FATURAMENTO PETICIONADA (E NÃO INDEFERIDA) OU COM O ANDAMENTO DE SINAL VITAL E MAIS DE 2 ANOS DO AJUIZAMENTO OU COM PENHORA DE IMOVEL/VALOR ACIMA DE 10% DO VALOR DA CAUSA.         
            WHEN ((TBM.TIPO_ANDAMENTO IS NOT NULL OR TBC.TIPO_ANDAMENTO IS NOT NULL OR TAP.TIPO_ANDAMENTO IS NOT NULL OR
                  TPF.TIPO_ANDAMENTO IS NOT NULL OR TFC.TIPO_ANDAMENTO IS NOT NULL OR TIDP.TIPO_ANDAMENTO IS NOT NULL OR
                  TDI.TIPO_ANDAMENTO IS NOT NULL OR TFRAUDE.TIPO_ANDAMENTO IS NOT NULL OR TSUCESSAO.TIPO_ANDAMENTO IS NOT NULL OR
                  TGRUPO.TIPO_ANDAMENTO IS NOT NULL OR TDESV.TIPO_ANDAMENTO IS NOT NULL OR TPENF.TIPO_ANDAMENTO IS NOT NULL) OR
                  (DATEDIFF(DAY, FP.DATA_DO_AJUIZAMENTO, GETDATE()) > 730 AND CSV.TIPO_ANDAMENTO = 'COM SINAL VITAL') OR
                  (COALESCE(PENIMO.VALOR_DE_ARREMATACAO_PENHORA_IMOVEIS, 0) + COALESCE(PENMLE.VALOR_NOMINAL_DO_DEPOSITO_PENHORA_MLE, 0) +
                   COALESCE(PENMLJ.VALOR_LEVANTADO_PENHORA_MLJ, 0)) > (FP.VALOR_CAUSA * 0.1))
                THEN 'PARCIALMENTE RECUPERÁVEL'

--- 4º VERIFICAÇÃO : SEM NENHUMA TESE PETICIONADA,OU PENHORA DE FATURAMENTO PETICIONADA OU COM PESQUISAS NEGATIVAS OU COM PENHORAS NEGATIVAS OU SEM SINAL VITAL OU COM SINAL VITAL E PROCESSO AJUIZADO A MENOS DE 2 ANOS
            WHEN 
                TPE.TIPO_ANDAMENTO IS NULL OR
                (
                TBM.TIPO_ANDAMENTO IS NOT NULL OR TBC.TIPO_ANDAMENTO IS NOT NULL OR TAP.TIPO_ANDAMENTO IS NOT NULL OR
                TPF.TIPO_ANDAMENTO IS NOT NULL OR TFC.TIPO_ANDAMENTO IS NOT NULL OR TIDP.TIPO_ANDAMENTO IS NOT NULL OR
                TDI.TIPO_ANDAMENTO IS NOT NULL OR TFRAUDE.TIPO_ANDAMENTO IS NOT NULL OR TSUCESSAO.TIPO_ANDAMENTO IS NOT NULL OR
                TGRUPO.TIPO_ANDAMENTO IS NOT NULL OR TDESV.TIPO_ANDAMENTO IS NOT NULL OR TPENF.TIPO_ANDAMENTO IS NOT NULL
                ) OR
                SSV.TIPO_ANDAMENTO = 'SEM SINAL VITAL' OR 
                (DATEDIFF(DAY, FP.DATA_DO_AJUIZAMENTO, GETDATE()) < 730 AND CSV.TIPO_ANDAMENTO = 'COM SINAL VITAL')
                THEN 'RECUPERAVEL'

            ELSE NULL
        END AS CLASSIFICACAO

    FROM JURIDICO.FichaProcessual FP
    LEFT JOIN JURIDICO.PENHORA_IMOVEIS PENIMO WITH(NOLOCK) ON FP.PASTA = PENIMO.PASTA
    LEFT JOIN JURIDICO.PENHORA_MLE PENMLE WITH(NOLOCK) ON FP.PASTA = PENMLE.PASTA
    LEFT JOIN JURIDICO.PENHORA_MLJ PENMLJ WITH(NOLOCK) ON FP.PASTA = PENMLJ.PASTA

    LEFT JOIN (
        SELECT 
        ANDA.PASTA,
        ANDA.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA
        WHERE ANDA.TIPO_ANDAMENTO = 'COM SINAL VITAL') AS CSV ON FP.PASTA = CSV.PASTA

    LEFT JOIN (
        SELECT 
        ANDA.PASTA,
        ANDA.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA
        WHERE ANDA.TIPO_ANDAMENTO = 'SEM SINAL VITAL') AS SSV ON FP.PASTA = SSV.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 070 - TESE PENHORA FATURAMENTO - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 071.1 - TESE PENHORA FATURAMENTO - INDEFERIDO'
        )  
    ) AS TPENF ON FP.PASTA = TPENF.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 076 - TESE DESVIO DE RECEBÍVEIS - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 077.1 - TESE DESVIO DE RECEBÍVEIS - INDEFERIDO'
        )
    ) AS TDESV ON FP.PASTA = TDESV.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 079 - TESE GRUPO ECONÔMICO - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 080.1 - TESE GRUPO ECONÔMICO - INDEFERIDO'
        )
    ) AS TGRUPO ON FP.PASTA = TGRUPO.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 081 - TESE SUCESSÃO EMPRESARIAL - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 082.1 - TESE SUCESSÃO EMPRESARIAL - INDEFERIDO'
        )
    ) AS TSUCESSAO ON FP.PASTA = TSUCESSAO.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 083 - TESE FRAUDE À EXECUÇÃO - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 084.1 - TESE FRAUDE À EXECUÇÃO - INDEFERIDO'
        )
    ) AS TFRAUDE ON FP.PASTA = TFRAUDE.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 085 - TESE DESCONSIDERAÇÃO INVERSA DA PERSONALIDADE JURÍDICA - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 086.1 - TESE DESCONSIDERAÇÃO INVERSA DA PERSONALIDADE JURÍDICA - INDEFERIDO'
        )
    ) AS TDI ON FP.PASTA = TDI.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 86.2 – TESE - INCIDENTE DESCONSIDERAÇÃO DA PERSONALIDADE JURÍDICA - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 86.4 – TESE - INCIDENTE DESCONSIDERAÇÃO DA PERSONALIDADE JURÍDICA - INDEFERIDO'
        )
    ) AS TIDP ON FP.PASTA = TIDP.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 087 - TESE FRAUDE CONTRA CREDORES - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 088.1 - TESE FRAUDE CONTRA CREDORES - INDEFERIDO'
        )
    ) AS TFC ON FP.PASTA = TFC.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 089 - TESE PEDIDO DE FALÊNCIA - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 090.1 - TESE PEDIDO DE FALÊNCIA - INDEFERIDO'
        )
    ) AS TPF ON FP.PASTA = TPF.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 091 - TESE APREENSÃO DE PASSAPORTE - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 092.1 - TESE APREENSÃO DE PASSAPORTE - INDEFERIDO'
        )
    ) AS TAP ON FP.PASTA = TAP.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 093- TESE BLOQUEIO DE CNH - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 094.1 - TESE BLOQUEIO DE CNH - INDEFERIDO'
        )
    ) AS TBC ON FP.PASTA = TBC.PASTA

    LEFT JOIN (
        SELECT
            ANDA1.PASTA,
            ANDA1.TIPO_ANDAMENTO
        FROM JURIDICO.ANDAMENTOS ANDA1 WITH(NOLOCK)
        WHERE ANDA1.TIPO_ANDAMENTO = 'IMP 095- TESE BLOQUEIO PENHORA DE MARCA E PATENTE - PETICIONADO'
        AND NOT EXISTS (
            SELECT 1
            FROM JURIDICO.ANDAMENTOS ANDA2 WITH(NOLOCK)
            WHERE ANDA2.PASTA = ANDA1.PASTA
            AND ANDA2.TIPO_ANDAMENTO = 'IMP 096.1 - TESE BLOQUEIO PENHORA DE MARCA E PATENTE - INDEFERIDO'
        )
    ) AS TBM ON FP.PASTA = TBM.PASTA

    LEFT JOIN (
        SELECT
        ANDA.PASTA,
        ANDA.TIPO_ANDAMENTO
    FROM JURIDICO.ANDAMENTOS ANDA WITH(NOLOCK)
    WHERE ANDA.TIPO_ANDAMENTO IN (
    'IMP 070 - TESE PENHORA FATURAMENTO - PETICIONADO',
    'IMP 076 - TESE DESVIO DE RECEBÍVEIS - PETICIONADO',
    'IMP 079 - TESE GRUPO ECONÔMICO - PETICIONADO',
    'IMP 081 - TESE SUCESSÃO EMPRESARIAL - PETICIONADO',
    'IMP 083 - TESE FRAUDE À EXECUÇÃO - PETICIONADO',
    'IMP 085 - TESE DESCONSIDERAÇÃO INVERSA DA PERSONALIDADE JURÍDICA - PETICIONADO',
    'IMP 86.2 – TESE - INCIDENTE DESCONSIDERAÇÃO DA PERSONALIDADE JURÍDICA - PETICIONADO',
    'IMP 087 - TESE FRAUDE CONTRA CREDORES - PETICIONADO',
    'IMP 089 - TESE PEDIDO DE FALÊNCIA - PETICIONADO',
    'IMP 091 - TESE APREENSÃO DE PASSAPORTE - PETICIONADO',
    'IMP 093- TESE BLOQUEIO DE CNH - PETICIONADO',
    'IMP 095- TESE BLOQUEIO PENHORA DE MARCA E PATENTE - PETICIONADO')
    ) AS TPE ON FP.PASTA = TPE.PASTA
        )

SELECT 
    fp.PASTA,
    fp.PRODUTO,
    fp.TIPO_ACAO,
    fp.ESTADO,
    fp.CARTEIRA,
    fp.PROCESSO,
    fp.BJ,
    fp.STATUS_PASTA,
    fp.DATA_DO_AJUIZAMENTO,
    fp.DATA_ENCERRAMENTO,
    fp.DATA_ENTRADA_PROC,
    fp.DATA_TERCEIRIZACAO,
    fp.DATA_CADASTRO_PASTA,
    fp.RESPONSAVEL_1,
    fp.CASO_NOVO,
    fp.CASO_ANTIGO,
    fp.AGRUPADORES,
    fp.ASSUNTO,
    acorven.STATUS_ACORDO,
    acorven.STATUS_GERAL,
    c1.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_1,
    c2.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_2,
    c3.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_3,
    c4.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_4,
    c4.DATA_CONCLUSAO_COMPROMISSO AS DATA_CONCLUSAO_COMPROMISSO_4,
    c5.TIPO_COMPROMISSO AS TIPO_COMPROMISSO_5,
    c5.DATA_CONCLUSAO_COMPROMISSO AS DATA_CONCLUSAO_COMPROMISSO_5,
    tp.TIPO_DE_DOCUMENTO,
    tp.DATA_EXECUCAO_TAREFA,
    CLAS.CLASSIFICACAO
FROM FICHAVAREJO fp
LEFT JOIN CTE_CLASSIFICACAO CLAS WITH(NOLOCK) ON FP.PASTA = CLAS.PASTA
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'Encerramento'
) c1 ON fp.PASTA = c1.PASTA AND c1.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'PESQUISA COMPLETA DE BENS - TESE DIFERENCIADA'
) c2 ON fp.PASTA = c2.PASTA AND c2.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'RECOLHER CUSTAS INICIAIS DA AÇÃO'
) c3 ON fp.PASTA = c3.PASTA AND c3.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'RECURSO DE APELAÇÃO'
) c4 ON fp.PASTA = c4.PASTA AND c4.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_COMPROMISSO,
        DATA_CONCLUSAO_COMPROMISSO,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_CONCLUSAO_COMPROMISSO DESC) AS RankCompromisso
    FROM Juridico.Compromissos_Concluidos WITH (NOLOCK)
    WHERE TIPO_COMPROMISSO = 'CONTRARRAZÕES DE APELAÇÃO'
) c5 ON fp.PASTA = c5.PASTA AND c5.RankCompromisso = 1
LEFT JOIN (
    SELECT 
        PASTA,
        TIPO_DE_DOCUMENTO,
        DATA_EXECUCAO_TAREFA,
        ROW_NUMBER() OVER (PARTITION BY PASTA ORDER BY DATA_EXECUCAO_TAREFA DESC) AS RankTarefa
    FROM Juridico.Triare_Protocolo WITH (NOLOCK)
    WHERE TIPO_DE_DOCUMENTO = 'Petição de Suspensão pelo 921, III, CPC (H)'
) tp ON fp.PASTA = tp.PASTA AND tp.RankTarefa = 1
LEFT JOIN Juridico.Penhora_Imoveis pimo WITH (NOLOCK)
    ON fp.PASTA = pimo.PASTA
LEFT JOIN (    
    SELECT 
        contr.nkPasta,
        fp.pasta,
        acord.statusAcordo AS 'STATUS_ACORDO',
        acord.nkstatusAcordo AS 'NK_STATUS_ACORDO',
        acord.dataPrimeiroVencimento,
        ROW_NUMBER () OVER (PARTITION BY contr.NKPASTA ORDER BY acord.dataPrimeiroVencimento DESC,nkstatusAcordo DESC) as rk,
    CASE 
    WHEN acord.nkstatusAcordo IN (1,3) THEN 'MINUTA ENVIADA'
    WHEN acord.nkstatusAcordo IN (5,6) THEN 'ACORDO PAGO'
    WHEN acord.nkstatusAcordo IN (2,7,9) THEN 'CANCELADO'
    ELSE 'OUTROS' END AS 'STATUS_GERAL'
    FROM negocial.COB_clienteEvento AS evc WITH (NOLOCK)
    LEFT JOIN negocial.COB_Acordo as acord WITH (NOLOCK) ON evc.nkClienteEvento = acord.nkAcordo 
    LEFT JOIN negocial.COB_Cliente AS cli WITH (NOLOCK) ON evc.nkCliente = cli.nkCliente
    LEFT JOIN negocial.COB_Contrato AS contr WITH (NOLOCK) ON cli.nkCliente = contr.nkCliente
    INNER JOIN FICHAVAREJO as fp WITH(NOLOCK) ON contr.nkpasta = fp.PASTA
) acorven ON fp.PASTA = acorven.nkPasta and acorven.rk = 1